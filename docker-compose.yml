networks:
  wwi:
    driver: bridge
    
services:
  wwi-db:
    container_name: wwi-db-sqlserver2022
    build:
      context: .
      dockerfile: ./docker/wwi-db/Dockerfile
    networks:
      - wwi
    ports:
      - "1533:1433"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "$$MSSQL_SA_PASSWORD" -C -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    profiles:  ["db", "dev"]
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "StrongPassword@"
  wwi-api:
    container_name: wwi-api
    build:
      context: .
      dockerfile: ./docker/wwi-api/Dockerfile
    networks:
      - wwi
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTPS_PORTS=5000
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=SuperStrongPassword
    profiles:  ["api", "dev"]
    env_file:
      - ./docker/.env
    ports:
      - "5000:5000"
    volumes:
      - ~/.aspnet/https:/https:ro      
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
  wwi-app:
    container_name: wwi-app
    build:
      context: .
      dockerfile: ./docker/wwi-app/Dockerfile
    networks:
      - wwi
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_HTTPS_PORTS=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=SuperStrongPassword
    profiles:  ["app", "dev"]
    env_file:
      - ./docker/.env
    ports:
      - "5001:5001"
    volumes:
      - ~/.aspnet/https:/https:ro      
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
