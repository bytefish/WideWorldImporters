// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
using WideWorldImporters.Shared.ApiSdk.Models.Edm;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService {
    public class Customer : IAdditionalDataHolder, IParsable {
        /// <summary>The accountOpenedDate property</summary>
        public DateTimeOffset? AccountOpenedDate { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The alternateContactPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? AlternateContactPerson { get; set; }
#nullable restore
#else
        public Person AlternateContactPerson { get; set; }
#endif
        /// <summary>The alternateContactPersonId property</summary>
        public int? AlternateContactPersonId { get; set; }
        /// <summary>The billToCustomer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Customer? BillToCustomer { get; set; }
#nullable restore
#else
        public Customer BillToCustomer { get; set; }
#endif
        /// <summary>The billToCustomerId property</summary>
        public int? BillToCustomerId { get; set; }
        /// <summary>The buyingGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup? BuyingGroup { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup BuyingGroup { get; set; }
#endif
        /// <summary>The buyingGroupId property</summary>
        public int? BuyingGroupId { get; set; }
        /// <summary>The creditLimit property</summary>
        public decimal? CreditLimit { get; set; }
        /// <summary>The customerCategory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory? CustomerCategory { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory CustomerCategory { get; set; }
#endif
        /// <summary>The customerCategoryId property</summary>
        public int? CustomerCategoryId { get; set; }
        /// <summary>The customerId property</summary>
        public int? CustomerId { get; set; }
        /// <summary>The customerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerName { get; set; }
#nullable restore
#else
        public string CustomerName { get; set; }
#endif
        /// <summary>The customerTransactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<CustomerTransaction>? CustomerTransactions { get; set; }
#nullable restore
#else
        public List<CustomerTransaction> CustomerTransactions { get; set; }
#endif
        /// <summary>The deliveryAddressLine1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryAddressLine1 { get; set; }
#nullable restore
#else
        public string DeliveryAddressLine1 { get; set; }
#endif
        /// <summary>The deliveryAddressLine2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryAddressLine2 { get; set; }
#nullable restore
#else
        public string DeliveryAddressLine2 { get; set; }
#endif
        /// <summary>The deliveryCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public City? DeliveryCity { get; set; }
#nullable restore
#else
        public City DeliveryCity { get; set; }
#endif
        /// <summary>The deliveryCityId property</summary>
        public int? DeliveryCityId { get; set; }
        /// <summary>The deliveryLocation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public GeometryPoint? DeliveryLocation { get; set; }
#nullable restore
#else
        public GeometryPoint DeliveryLocation { get; set; }
#endif
        /// <summary>The deliveryMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod? DeliveryMethod { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod DeliveryMethod { get; set; }
#endif
        /// <summary>The deliveryMethodId property</summary>
        public int? DeliveryMethodId { get; set; }
        /// <summary>The deliveryPostalCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryPostalCode { get; set; }
#nullable restore
#else
        public string DeliveryPostalCode { get; set; }
#endif
        /// <summary>The deliveryRun property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryRun { get; set; }
#nullable restore
#else
        public string DeliveryRun { get; set; }
#endif
        /// <summary>The faxNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FaxNumber { get; set; }
#nullable restore
#else
        public string FaxNumber { get; set; }
#endif
        /// <summary>The inverseBillToCustomer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Customer>? InverseBillToCustomer { get; set; }
#nullable restore
#else
        public List<Customer> InverseBillToCustomer { get; set; }
#endif
        /// <summary>The invoiceBillToCustomers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Invoice>? InvoiceBillToCustomers { get; set; }
#nullable restore
#else
        public List<Invoice> InvoiceBillToCustomers { get; set; }
#endif
        /// <summary>The invoiceCustomers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Invoice>? InvoiceCustomers { get; set; }
#nullable restore
#else
        public List<Invoice> InvoiceCustomers { get; set; }
#endif
        /// <summary>The isOnCreditHold property</summary>
        public bool? IsOnCreditHold { get; set; }
        /// <summary>The isStatementSent property</summary>
        public bool? IsStatementSent { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The orders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Order>? Orders { get; set; }
#nullable restore
#else
        public List<Order> Orders { get; set; }
#endif
        /// <summary>The paymentDays property</summary>
        public int? PaymentDays { get; set; }
        /// <summary>The phoneNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber { get; set; }
#nullable restore
#else
        public string PhoneNumber { get; set; }
#endif
        /// <summary>The postalAddressLine1 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalAddressLine1 { get; set; }
#nullable restore
#else
        public string PostalAddressLine1 { get; set; }
#endif
        /// <summary>The postalAddressLine2 property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalAddressLine2 { get; set; }
#nullable restore
#else
        public string PostalAddressLine2 { get; set; }
#endif
        /// <summary>The postalCity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public City? PostalCity { get; set; }
#nullable restore
#else
        public City PostalCity { get; set; }
#endif
        /// <summary>The postalCityId property</summary>
        public int? PostalCityId { get; set; }
        /// <summary>The postalPostalCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PostalPostalCode { get; set; }
#nullable restore
#else
        public string PostalPostalCode { get; set; }
#endif
        /// <summary>The primaryContactPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? PrimaryContactPerson { get; set; }
#nullable restore
#else
        public Person PrimaryContactPerson { get; set; }
#endif
        /// <summary>The primaryContactPersonId property</summary>
        public int? PrimaryContactPersonId { get; set; }
        /// <summary>The runPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RunPosition { get; set; }
#nullable restore
#else
        public string RunPosition { get; set; }
#endif
        /// <summary>The specialDeals property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<SpecialDeal>? SpecialDeals { get; set; }
#nullable restore
#else
        public List<SpecialDeal> SpecialDeals { get; set; }
#endif
        /// <summary>The standardDiscountPercentage property</summary>
        public decimal? StandardDiscountPercentage { get; set; }
        /// <summary>The stockItemTransactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<StockItemTransaction>? StockItemTransactions { get; set; }
#nullable restore
#else
        public List<StockItemTransaction> StockItemTransactions { get; set; }
#endif
        /// <summary>The websiteUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebsiteUrl { get; set; }
#nullable restore
#else
        public string WebsiteUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new Customer and sets the default values.
        /// </summary>
        public Customer() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Customer CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Customer();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"accountOpenedDate", n => { AccountOpenedDate = n.GetDateTimeOffsetValue(); } },
                {"alternateContactPerson", n => { AlternateContactPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"alternateContactPersonId", n => { AlternateContactPersonId = n.GetIntValue(); } },
                {"billToCustomer", n => { BillToCustomer = n.GetObjectValue<Customer>(Customer.CreateFromDiscriminatorValue); } },
                {"billToCustomerId", n => { BillToCustomerId = n.GetIntValue(); } },
                {"buyingGroup", n => { BuyingGroup = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup.CreateFromDiscriminatorValue); } },
                {"buyingGroupId", n => { BuyingGroupId = n.GetIntValue(); } },
                {"creditLimit", n => { CreditLimit = n.GetDecimalValue(); } },
                {"customerCategory", n => { CustomerCategory = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory.CreateFromDiscriminatorValue); } },
                {"customerCategoryId", n => { CustomerCategoryId = n.GetIntValue(); } },
                {"customerId", n => { CustomerId = n.GetIntValue(); } },
                {"customerName", n => { CustomerName = n.GetStringValue(); } },
                {"customerTransactions", n => { CustomerTransactions = n.GetCollectionOfObjectValues<CustomerTransaction>(CustomerTransaction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"deliveryAddressLine1", n => { DeliveryAddressLine1 = n.GetStringValue(); } },
                {"deliveryAddressLine2", n => { DeliveryAddressLine2 = n.GetStringValue(); } },
                {"deliveryCity", n => { DeliveryCity = n.GetObjectValue<City>(City.CreateFromDiscriminatorValue); } },
                {"deliveryCityId", n => { DeliveryCityId = n.GetIntValue(); } },
                {"deliveryLocation", n => { DeliveryLocation = n.GetObjectValue<GeometryPoint>(GeometryPoint.CreateFromDiscriminatorValue); } },
                {"deliveryMethod", n => { DeliveryMethod = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod.CreateFromDiscriminatorValue); } },
                {"deliveryMethodId", n => { DeliveryMethodId = n.GetIntValue(); } },
                {"deliveryPostalCode", n => { DeliveryPostalCode = n.GetStringValue(); } },
                {"deliveryRun", n => { DeliveryRun = n.GetStringValue(); } },
                {"faxNumber", n => { FaxNumber = n.GetStringValue(); } },
                {"inverseBillToCustomer", n => { InverseBillToCustomer = n.GetCollectionOfObjectValues<Customer>(Customer.CreateFromDiscriminatorValue)?.ToList(); } },
                {"invoiceBillToCustomers", n => { InvoiceBillToCustomers = n.GetCollectionOfObjectValues<Invoice>(Invoice.CreateFromDiscriminatorValue)?.ToList(); } },
                {"invoiceCustomers", n => { InvoiceCustomers = n.GetCollectionOfObjectValues<Invoice>(Invoice.CreateFromDiscriminatorValue)?.ToList(); } },
                {"isOnCreditHold", n => { IsOnCreditHold = n.GetBoolValue(); } },
                {"isStatementSent", n => { IsStatementSent = n.GetBoolValue(); } },
                {"lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                {"lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"orders", n => { Orders = n.GetCollectionOfObjectValues<Order>(Order.CreateFromDiscriminatorValue)?.ToList(); } },
                {"paymentDays", n => { PaymentDays = n.GetIntValue(); } },
                {"phoneNumber", n => { PhoneNumber = n.GetStringValue(); } },
                {"postalAddressLine1", n => { PostalAddressLine1 = n.GetStringValue(); } },
                {"postalAddressLine2", n => { PostalAddressLine2 = n.GetStringValue(); } },
                {"postalCity", n => { PostalCity = n.GetObjectValue<City>(City.CreateFromDiscriminatorValue); } },
                {"postalCityId", n => { PostalCityId = n.GetIntValue(); } },
                {"postalPostalCode", n => { PostalPostalCode = n.GetStringValue(); } },
                {"primaryContactPerson", n => { PrimaryContactPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"primaryContactPersonId", n => { PrimaryContactPersonId = n.GetIntValue(); } },
                {"runPosition", n => { RunPosition = n.GetStringValue(); } },
                {"specialDeals", n => { SpecialDeals = n.GetCollectionOfObjectValues<SpecialDeal>(SpecialDeal.CreateFromDiscriminatorValue)?.ToList(); } },
                {"standardDiscountPercentage", n => { StandardDiscountPercentage = n.GetDecimalValue(); } },
                {"stockItemTransactions", n => { StockItemTransactions = n.GetCollectionOfObjectValues<StockItemTransaction>(StockItemTransaction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"websiteUrl", n => { WebsiteUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("accountOpenedDate", AccountOpenedDate);
            writer.WriteObjectValue<Person>("alternateContactPerson", AlternateContactPerson);
            writer.WriteIntValue("alternateContactPersonId", AlternateContactPersonId);
            writer.WriteObjectValue<Customer>("billToCustomer", BillToCustomer);
            writer.WriteIntValue("billToCustomerId", BillToCustomerId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup>("buyingGroup", BuyingGroup);
            writer.WriteIntValue("buyingGroupId", BuyingGroupId);
            writer.WriteDecimalValue("creditLimit", CreditLimit);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory>("customerCategory", CustomerCategory);
            writer.WriteIntValue("customerCategoryId", CustomerCategoryId);
            writer.WriteIntValue("customerId", CustomerId);
            writer.WriteStringValue("customerName", CustomerName);
            writer.WriteCollectionOfObjectValues<CustomerTransaction>("customerTransactions", CustomerTransactions);
            writer.WriteStringValue("deliveryAddressLine1", DeliveryAddressLine1);
            writer.WriteStringValue("deliveryAddressLine2", DeliveryAddressLine2);
            writer.WriteObjectValue<City>("deliveryCity", DeliveryCity);
            writer.WriteIntValue("deliveryCityId", DeliveryCityId);
            writer.WriteObjectValue<GeometryPoint>("deliveryLocation", DeliveryLocation);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod>("deliveryMethod", DeliveryMethod);
            writer.WriteIntValue("deliveryMethodId", DeliveryMethodId);
            writer.WriteStringValue("deliveryPostalCode", DeliveryPostalCode);
            writer.WriteStringValue("deliveryRun", DeliveryRun);
            writer.WriteStringValue("faxNumber", FaxNumber);
            writer.WriteCollectionOfObjectValues<Customer>("inverseBillToCustomer", InverseBillToCustomer);
            writer.WriteCollectionOfObjectValues<Invoice>("invoiceBillToCustomers", InvoiceBillToCustomers);
            writer.WriteCollectionOfObjectValues<Invoice>("invoiceCustomers", InvoiceCustomers);
            writer.WriteBoolValue("isOnCreditHold", IsOnCreditHold);
            writer.WriteBoolValue("isStatementSent", IsStatementSent);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteCollectionOfObjectValues<Order>("orders", Orders);
            writer.WriteIntValue("paymentDays", PaymentDays);
            writer.WriteStringValue("phoneNumber", PhoneNumber);
            writer.WriteStringValue("postalAddressLine1", PostalAddressLine1);
            writer.WriteStringValue("postalAddressLine2", PostalAddressLine2);
            writer.WriteObjectValue<City>("postalCity", PostalCity);
            writer.WriteIntValue("postalCityId", PostalCityId);
            writer.WriteStringValue("postalPostalCode", PostalPostalCode);
            writer.WriteObjectValue<Person>("primaryContactPerson", PrimaryContactPerson);
            writer.WriteIntValue("primaryContactPersonId", PrimaryContactPersonId);
            writer.WriteStringValue("runPosition", RunPosition);
            writer.WriteCollectionOfObjectValues<SpecialDeal>("specialDeals", SpecialDeals);
            writer.WriteDecimalValue("standardDiscountPercentage", StandardDiscountPercentage);
            writer.WriteCollectionOfObjectValues<StockItemTransaction>("stockItemTransactions", StockItemTransactions);
            writer.WriteStringValue("websiteUrl", WebsiteUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
