// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class StockItemHolding : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The binLocation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BinLocation { get; set; }
#nullable restore
#else
        public string BinLocation { get; set; }
#endif
        /// <summary>The lastCostPrice property</summary>
        public decimal? LastCostPrice { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The lastEditedWhen property</summary>
        public DateTimeOffset? LastEditedWhen { get; set; }
        /// <summary>The lastStocktakeQuantity property</summary>
        public int? LastStocktakeQuantity { get; set; }
        /// <summary>The quantityOnHand property</summary>
        public int? QuantityOnHand { get; set; }
        /// <summary>The reorderLevel property</summary>
        public int? ReorderLevel { get; set; }
        /// <summary>The stockItem property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem? StockItem { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem StockItem { get; set; }
#endif
        /// <summary>The stockItemId property</summary>
        public int? StockItemId { get; set; }
        /// <summary>The targetStockLevel property</summary>
        public int? TargetStockLevel { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItemHolding"/> and sets the default values.
        /// </summary>
        public StockItemHolding()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItemHolding"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItemHolding CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItemHolding();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "binLocation", n => { BinLocation = n.GetStringValue(); } },
                { "lastCostPrice", n => { LastCostPrice = n.GetDecimalValue(); } },
                { "lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                { "lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person.CreateFromDiscriminatorValue); } },
                { "lastEditedWhen", n => { LastEditedWhen = n.GetDateTimeOffsetValue(); } },
                { "lastStocktakeQuantity", n => { LastStocktakeQuantity = n.GetIntValue(); } },
                { "quantityOnHand", n => { QuantityOnHand = n.GetIntValue(); } },
                { "reorderLevel", n => { ReorderLevel = n.GetIntValue(); } },
                { "stockItem", n => { StockItem = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem.CreateFromDiscriminatorValue); } },
                { "stockItemId", n => { StockItemId = n.GetIntValue(); } },
                { "targetStockLevel", n => { TargetStockLevel = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("binLocation", BinLocation);
            writer.WriteDecimalValue("lastCostPrice", LastCostPrice);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteDateTimeOffsetValue("lastEditedWhen", LastEditedWhen);
            writer.WriteIntValue("lastStocktakeQuantity", LastStocktakeQuantity);
            writer.WriteIntValue("quantityOnHand", QuantityOnHand);
            writer.WriteIntValue("reorderLevel", ReorderLevel);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem>("stockItem", StockItem);
            writer.WriteIntValue("stockItemId", StockItemId);
            writer.WriteIntValue("targetStockLevel", TargetStockLevel);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
