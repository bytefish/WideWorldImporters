// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService {
    #pragma warning disable CS1591
    public class SpecialDeal : IAdditionalDataHolder, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The buyingGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup? BuyingGroup { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup BuyingGroup { get; set; }
#endif
        /// <summary>The buyingGroupId property</summary>
        public int? BuyingGroupId { get; set; }
        /// <summary>The customer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer? Customer { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer Customer { get; set; }
#endif
        /// <summary>The customerCategory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory? CustomerCategory { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory CustomerCategory { get; set; }
#endif
        /// <summary>The customerCategoryId property</summary>
        public int? CustomerCategoryId { get; set; }
        /// <summary>The customerId property</summary>
        public int? CustomerId { get; set; }
        /// <summary>The dealDescription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DealDescription { get; set; }
#nullable restore
#else
        public string DealDescription { get; set; }
#endif
        /// <summary>The discountAmount property</summary>
        public decimal? DiscountAmount { get; set; }
        /// <summary>The discountPercentage property</summary>
        public decimal? DiscountPercentage { get; set; }
        /// <summary>The endDate property</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The lastEditedWhen property</summary>
        public DateTimeOffset? LastEditedWhen { get; set; }
        /// <summary>The specialDealId property</summary>
        public int? SpecialDealId { get; set; }
        /// <summary>The startDate property</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary>The stockGroup property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockGroup? StockGroup { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockGroup StockGroup { get; set; }
#endif
        /// <summary>The stockGroupId property</summary>
        public int? StockGroupId { get; set; }
        /// <summary>The stockItem property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem? StockItem { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem StockItem { get; set; }
#endif
        /// <summary>The stockItemId property</summary>
        public int? StockItemId { get; set; }
        /// <summary>The unitPrice property</summary>
        public decimal? UnitPrice { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="SpecialDeal"/> and sets the default values.
        /// </summary>
        public SpecialDeal()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="SpecialDeal"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SpecialDeal CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SpecialDeal();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"buyingGroup", n => { BuyingGroup = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup.CreateFromDiscriminatorValue); } },
                {"buyingGroupId", n => { BuyingGroupId = n.GetIntValue(); } },
                {"customer", n => { Customer = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer.CreateFromDiscriminatorValue); } },
                {"customerCategory", n => { CustomerCategory = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory.CreateFromDiscriminatorValue); } },
                {"customerCategoryId", n => { CustomerCategoryId = n.GetIntValue(); } },
                {"customerId", n => { CustomerId = n.GetIntValue(); } },
                {"dealDescription", n => { DealDescription = n.GetStringValue(); } },
                {"discountAmount", n => { DiscountAmount = n.GetDecimalValue(); } },
                {"discountPercentage", n => { DiscountPercentage = n.GetDecimalValue(); } },
                {"endDate", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                {"lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                {"lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"lastEditedWhen", n => { LastEditedWhen = n.GetDateTimeOffsetValue(); } },
                {"specialDealId", n => { SpecialDealId = n.GetIntValue(); } },
                {"startDate", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                {"stockGroup", n => { StockGroup = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockGroup>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockGroup.CreateFromDiscriminatorValue); } },
                {"stockGroupId", n => { StockGroupId = n.GetIntValue(); } },
                {"stockItem", n => { StockItem = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem.CreateFromDiscriminatorValue); } },
                {"stockItemId", n => { StockItemId = n.GetIntValue(); } },
                {"unitPrice", n => { UnitPrice = n.GetDecimalValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.BuyingGroup>("buyingGroup", BuyingGroup);
            writer.WriteIntValue("buyingGroupId", BuyingGroupId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>("customer", Customer);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerCategory>("customerCategory", CustomerCategory);
            writer.WriteIntValue("customerCategoryId", CustomerCategoryId);
            writer.WriteIntValue("customerId", CustomerId);
            writer.WriteStringValue("dealDescription", DealDescription);
            writer.WriteDecimalValue("discountAmount", DiscountAmount);
            writer.WriteDecimalValue("discountPercentage", DiscountPercentage);
            writer.WriteDateTimeOffsetValue("endDate", EndDate);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteDateTimeOffsetValue("lastEditedWhen", LastEditedWhen);
            writer.WriteIntValue("specialDealId", SpecialDealId);
            writer.WriteDateTimeOffsetValue("startDate", StartDate);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockGroup>("stockGroup", StockGroup);
            writer.WriteIntValue("stockGroupId", StockGroupId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StockItem>("stockItem", StockItem);
            writer.WriteIntValue("stockItemId", StockItemId);
            writer.WriteDecimalValue("unitPrice", UnitPrice);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
