// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService {
    public class DeliveryMethod : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The customers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Customer>? Customers { get; set; }
#nullable restore
#else
        public List<Customer> Customers { get; set; }
#endif
        /// <summary>The deliveryMethodId property</summary>
        public int? DeliveryMethodId { get; set; }
        /// <summary>The deliveryMethodName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryMethodName { get; set; }
#nullable restore
#else
        public string DeliveryMethodName { get; set; }
#endif
        /// <summary>The invoices property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Invoice>? Invoices { get; set; }
#nullable restore
#else
        public List<Invoice> Invoices { get; set; }
#endif
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The purchaseOrders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<PurchaseOrder>? PurchaseOrders { get; set; }
#nullable restore
#else
        public List<PurchaseOrder> PurchaseOrders { get; set; }
#endif
        /// <summary>The suppliers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Supplier>? Suppliers { get; set; }
#nullable restore
#else
        public List<Supplier> Suppliers { get; set; }
#endif
        /// <summary>
        /// Instantiates a new DeliveryMethod and sets the default values.
        /// </summary>
        public DeliveryMethod() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static DeliveryMethod CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new DeliveryMethod();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"customers", n => { Customers = n.GetCollectionOfObjectValues<Customer>(Customer.CreateFromDiscriminatorValue)?.ToList(); } },
                {"deliveryMethodId", n => { DeliveryMethodId = n.GetIntValue(); } },
                {"deliveryMethodName", n => { DeliveryMethodName = n.GetStringValue(); } },
                {"invoices", n => { Invoices = n.GetCollectionOfObjectValues<Invoice>(Invoice.CreateFromDiscriminatorValue)?.ToList(); } },
                {"lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                {"lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"purchaseOrders", n => { PurchaseOrders = n.GetCollectionOfObjectValues<PurchaseOrder>(PurchaseOrder.CreateFromDiscriminatorValue)?.ToList(); } },
                {"suppliers", n => { Suppliers = n.GetCollectionOfObjectValues<Supplier>(Supplier.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<Customer>("customers", Customers);
            writer.WriteIntValue("deliveryMethodId", DeliveryMethodId);
            writer.WriteStringValue("deliveryMethodName", DeliveryMethodName);
            writer.WriteCollectionOfObjectValues<Invoice>("invoices", Invoices);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteCollectionOfObjectValues<PurchaseOrder>("purchaseOrders", PurchaseOrders);
            writer.WriteCollectionOfObjectValues<Supplier>("suppliers", Suppliers);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
