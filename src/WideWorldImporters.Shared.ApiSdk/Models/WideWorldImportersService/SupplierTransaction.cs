// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService {
    public class SupplierTransaction : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amountExcludingTax property</summary>
        public decimal? AmountExcludingTax { get; set; }
        /// <summary>The finalizationDate property</summary>
        public DateTimeOffset? FinalizationDate { get; set; }
        /// <summary>The isFinalized property</summary>
        public bool? IsFinalized { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The lastEditedWhen property</summary>
        public DateTimeOffset? LastEditedWhen { get; set; }
        /// <summary>The outstandingBalance property</summary>
        public decimal? OutstandingBalance { get; set; }
        /// <summary>The paymentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod? PaymentMethod { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod PaymentMethod { get; set; }
#endif
        /// <summary>The paymentMethodId property</summary>
        public int? PaymentMethodId { get; set; }
        /// <summary>The purchaseOrder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PurchaseOrder? PurchaseOrder { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PurchaseOrder PurchaseOrder { get; set; }
#endif
        /// <summary>The purchaseOrderId property</summary>
        public int? PurchaseOrderId { get; set; }
        /// <summary>The supplier property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Supplier? Supplier { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Supplier Supplier { get; set; }
#endif
        /// <summary>The supplierId property</summary>
        public int? SupplierId { get; set; }
        /// <summary>The supplierInvoiceNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SupplierInvoiceNumber { get; set; }
#nullable restore
#else
        public string SupplierInvoiceNumber { get; set; }
#endif
        /// <summary>The supplierTransactionId property</summary>
        public int? SupplierTransactionId { get; set; }
        /// <summary>The taxAmount property</summary>
        public decimal? TaxAmount { get; set; }
        /// <summary>The transactionAmount property</summary>
        public decimal? TransactionAmount { get; set; }
        /// <summary>The transactionDate property</summary>
        public DateTimeOffset? TransactionDate { get; set; }
        /// <summary>The transactionType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType? TransactionType { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType TransactionType { get; set; }
#endif
        /// <summary>The transactionTypeId property</summary>
        public int? TransactionTypeId { get; set; }
        /// <summary>
        /// Instantiates a new SupplierTransaction and sets the default values.
        /// </summary>
        public SupplierTransaction() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static SupplierTransaction CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new SupplierTransaction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"amountExcludingTax", n => { AmountExcludingTax = n.GetDecimalValue(); } },
                {"finalizationDate", n => { FinalizationDate = n.GetDateTimeOffsetValue(); } },
                {"isFinalized", n => { IsFinalized = n.GetBoolValue(); } },
                {"lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                {"lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"lastEditedWhen", n => { LastEditedWhen = n.GetDateTimeOffsetValue(); } },
                {"outstandingBalance", n => { OutstandingBalance = n.GetDecimalValue(); } },
                {"paymentMethod", n => { PaymentMethod = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod.CreateFromDiscriminatorValue); } },
                {"paymentMethodId", n => { PaymentMethodId = n.GetIntValue(); } },
                {"purchaseOrder", n => { PurchaseOrder = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PurchaseOrder>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PurchaseOrder.CreateFromDiscriminatorValue); } },
                {"purchaseOrderId", n => { PurchaseOrderId = n.GetIntValue(); } },
                {"supplier", n => { Supplier = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Supplier>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Supplier.CreateFromDiscriminatorValue); } },
                {"supplierId", n => { SupplierId = n.GetIntValue(); } },
                {"supplierInvoiceNumber", n => { SupplierInvoiceNumber = n.GetStringValue(); } },
                {"supplierTransactionId", n => { SupplierTransactionId = n.GetIntValue(); } },
                {"taxAmount", n => { TaxAmount = n.GetDecimalValue(); } },
                {"transactionAmount", n => { TransactionAmount = n.GetDecimalValue(); } },
                {"transactionDate", n => { TransactionDate = n.GetDateTimeOffsetValue(); } },
                {"transactionType", n => { TransactionType = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType.CreateFromDiscriminatorValue); } },
                {"transactionTypeId", n => { TransactionTypeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDecimalValue("amountExcludingTax", AmountExcludingTax);
            writer.WriteDateTimeOffsetValue("finalizationDate", FinalizationDate);
            writer.WriteBoolValue("isFinalized", IsFinalized);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteDateTimeOffsetValue("lastEditedWhen", LastEditedWhen);
            writer.WriteDecimalValue("outstandingBalance", OutstandingBalance);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod>("paymentMethod", PaymentMethod);
            writer.WriteIntValue("paymentMethodId", PaymentMethodId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PurchaseOrder>("purchaseOrder", PurchaseOrder);
            writer.WriteIntValue("purchaseOrderId", PurchaseOrderId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Supplier>("supplier", Supplier);
            writer.WriteIntValue("supplierId", SupplierId);
            writer.WriteStringValue("supplierInvoiceNumber", SupplierInvoiceNumber);
            writer.WriteIntValue("supplierTransactionId", SupplierTransactionId);
            writer.WriteDecimalValue("taxAmount", TaxAmount);
            writer.WriteDecimalValue("transactionAmount", TransactionAmount);
            writer.WriteDateTimeOffsetValue("transactionDate", TransactionDate);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType>("transactionType", TransactionType);
            writer.WriteIntValue("transactionTypeId", TransactionTypeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
