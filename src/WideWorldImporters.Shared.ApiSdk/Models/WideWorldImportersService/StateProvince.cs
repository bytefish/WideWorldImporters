// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
using WideWorldImporters.Shared.ApiSdk.Models.Edm;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class StateProvince : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The border property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.Edm.Geography? Border { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.Edm.Geography Border { get; set; }
#endif
        /// <summary>The cities property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.City>? Cities { get; set; }
#nullable restore
#else
        public List<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.City> Cities { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Country? Country { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Country Country { get; set; }
#endif
        /// <summary>The countryId property</summary>
        public int? CountryId { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The latestRecordedPopulation property</summary>
        public long? LatestRecordedPopulation { get; set; }
        /// <summary>The salesTerritory property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SalesTerritory { get; set; }
#nullable restore
#else
        public string SalesTerritory { get; set; }
#endif
        /// <summary>The stateProvinceCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateProvinceCode { get; set; }
#nullable restore
#else
        public string StateProvinceCode { get; set; }
#endif
        /// <summary>The stateProvinceId property</summary>
        public int? StateProvinceId { get; set; }
        /// <summary>The stateProvinceName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StateProvinceName { get; set; }
#nullable restore
#else
        public string StateProvinceName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StateProvince"/> and sets the default values.
        /// </summary>
        public StateProvince()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StateProvince"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StateProvince CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.StateProvince();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "border", n => { Border = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.Edm.Geography>(global::WideWorldImporters.Shared.ApiSdk.Models.Edm.Geography.CreateFromDiscriminatorValue); } },
                { "cities", n => { Cities = n.GetCollectionOfObjectValues<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.City>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.City.CreateFromDiscriminatorValue)?.AsList(); } },
                { "country", n => { Country = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Country>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Country.CreateFromDiscriminatorValue); } },
                { "countryId", n => { CountryId = n.GetIntValue(); } },
                { "lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                { "lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person.CreateFromDiscriminatorValue); } },
                { "latestRecordedPopulation", n => { LatestRecordedPopulation = n.GetLongValue(); } },
                { "salesTerritory", n => { SalesTerritory = n.GetStringValue(); } },
                { "stateProvinceCode", n => { StateProvinceCode = n.GetStringValue(); } },
                { "stateProvinceId", n => { StateProvinceId = n.GetIntValue(); } },
                { "stateProvinceName", n => { StateProvinceName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.Edm.Geography>("border", Border);
            writer.WriteCollectionOfObjectValues<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.City>("cities", Cities);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Country>("country", Country);
            writer.WriteIntValue("countryId", CountryId);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteLongValue("latestRecordedPopulation", LatestRecordedPopulation);
            writer.WriteStringValue("salesTerritory", SalesTerritory);
            writer.WriteStringValue("stateProvinceCode", StateProvinceCode);
            writer.WriteIntValue("stateProvinceId", StateProvinceId);
            writer.WriteStringValue("stateProvinceName", StateProvinceName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
