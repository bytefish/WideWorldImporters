// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomerTransaction : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The amountExcludingTax property</summary>
        public decimal? AmountExcludingTax { get; set; }
        /// <summary>The customer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer? Customer { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer Customer { get; set; }
#endif
        /// <summary>The customerId property</summary>
        public int? CustomerId { get; set; }
        /// <summary>The customerTransactionId property</summary>
        public int? CustomerTransactionId { get; set; }
        /// <summary>The finalizationDate property</summary>
        public DateTimeOffset? FinalizationDate { get; set; }
        /// <summary>The invoice property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Invoice? Invoice { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Invoice Invoice { get; set; }
#endif
        /// <summary>The invoiceId property</summary>
        public int? InvoiceId { get; set; }
        /// <summary>The isFinalized property</summary>
        public bool? IsFinalized { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The lastEditedWhen property</summary>
        public DateTimeOffset? LastEditedWhen { get; set; }
        /// <summary>The outstandingBalance property</summary>
        public decimal? OutstandingBalance { get; set; }
        /// <summary>The paymentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod? PaymentMethod { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod PaymentMethod { get; set; }
#endif
        /// <summary>The paymentMethodId property</summary>
        public int? PaymentMethodId { get; set; }
        /// <summary>The taxAmount property</summary>
        public decimal? TaxAmount { get; set; }
        /// <summary>The transactionAmount property</summary>
        public decimal? TransactionAmount { get; set; }
        /// <summary>The transactionDate property</summary>
        public DateTimeOffset? TransactionDate { get; set; }
        /// <summary>The transactionType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType? TransactionType { get; set; }
#nullable restore
#else
        public global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType TransactionType { get; set; }
#endif
        /// <summary>The transactionTypeId property</summary>
        public int? TransactionTypeId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerTransaction"/> and sets the default values.
        /// </summary>
        public CustomerTransaction()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerTransaction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerTransaction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.CustomerTransaction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "amountExcludingTax", n => { AmountExcludingTax = n.GetDecimalValue(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer.CreateFromDiscriminatorValue); } },
                { "customerId", n => { CustomerId = n.GetIntValue(); } },
                { "customerTransactionId", n => { CustomerTransactionId = n.GetIntValue(); } },
                { "finalizationDate", n => { FinalizationDate = n.GetDateTimeOffsetValue(); } },
                { "invoice", n => { Invoice = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Invoice>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Invoice.CreateFromDiscriminatorValue); } },
                { "invoiceId", n => { InvoiceId = n.GetIntValue(); } },
                { "isFinalized", n => { IsFinalized = n.GetBoolValue(); } },
                { "lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                { "lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person.CreateFromDiscriminatorValue); } },
                { "lastEditedWhen", n => { LastEditedWhen = n.GetDateTimeOffsetValue(); } },
                { "outstandingBalance", n => { OutstandingBalance = n.GetDecimalValue(); } },
                { "paymentMethod", n => { PaymentMethod = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod.CreateFromDiscriminatorValue); } },
                { "paymentMethodId", n => { PaymentMethodId = n.GetIntValue(); } },
                { "taxAmount", n => { TaxAmount = n.GetDecimalValue(); } },
                { "transactionAmount", n => { TransactionAmount = n.GetDecimalValue(); } },
                { "transactionDate", n => { TransactionDate = n.GetDateTimeOffsetValue(); } },
                { "transactionType", n => { TransactionType = n.GetObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType>(global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType.CreateFromDiscriminatorValue); } },
                { "transactionTypeId", n => { TransactionTypeId = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDecimalValue("amountExcludingTax", AmountExcludingTax);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>("customer", Customer);
            writer.WriteIntValue("customerId", CustomerId);
            writer.WriteIntValue("customerTransactionId", CustomerTransactionId);
            writer.WriteDateTimeOffsetValue("finalizationDate", FinalizationDate);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Invoice>("invoice", Invoice);
            writer.WriteIntValue("invoiceId", InvoiceId);
            writer.WriteBoolValue("isFinalized", IsFinalized);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteDateTimeOffsetValue("lastEditedWhen", LastEditedWhen);
            writer.WriteDecimalValue("outstandingBalance", OutstandingBalance);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.PaymentMethod>("paymentMethod", PaymentMethod);
            writer.WriteIntValue("paymentMethodId", PaymentMethodId);
            writer.WriteDecimalValue("taxAmount", TaxAmount);
            writer.WriteDecimalValue("transactionAmount", TransactionAmount);
            writer.WriteDateTimeOffsetValue("transactionDate", TransactionDate);
            writer.WriteObjectValue<global::WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.TransactionType>("transactionType", TransactionType);
            writer.WriteIntValue("transactionTypeId", TransactionTypeId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
