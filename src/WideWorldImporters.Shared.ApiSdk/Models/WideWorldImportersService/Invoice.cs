// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService {
    #pragma warning disable CS1591
    public class Invoice : IAdditionalDataHolder, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>The accountsPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? AccountsPerson { get; set; }
#nullable restore
#else
        public Person AccountsPerson { get; set; }
#endif
        /// <summary>The accountsPersonId property</summary>
        public int? AccountsPersonId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The billToCustomer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer? BillToCustomer { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer BillToCustomer { get; set; }
#endif
        /// <summary>The billToCustomerId property</summary>
        public int? BillToCustomerId { get; set; }
        /// <summary>The comments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Comments { get; set; }
#nullable restore
#else
        public string Comments { get; set; }
#endif
        /// <summary>The confirmedDeliveryTime property</summary>
        public DateTimeOffset? ConfirmedDeliveryTime { get; set; }
        /// <summary>The confirmedReceivedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ConfirmedReceivedBy { get; set; }
#nullable restore
#else
        public string ConfirmedReceivedBy { get; set; }
#endif
        /// <summary>The contactPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? ContactPerson { get; set; }
#nullable restore
#else
        public Person ContactPerson { get; set; }
#endif
        /// <summary>The contactPersonId property</summary>
        public int? ContactPersonId { get; set; }
        /// <summary>The creditNoteReason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreditNoteReason { get; set; }
#nullable restore
#else
        public string CreditNoteReason { get; set; }
#endif
        /// <summary>The customer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer? Customer { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer Customer { get; set; }
#endif
        /// <summary>The customerId property</summary>
        public int? CustomerId { get; set; }
        /// <summary>The customerPurchaseOrderNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerPurchaseOrderNumber { get; set; }
#nullable restore
#else
        public string CustomerPurchaseOrderNumber { get; set; }
#endif
        /// <summary>The customerTransactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<CustomerTransaction>? CustomerTransactions { get; set; }
#nullable restore
#else
        public List<CustomerTransaction> CustomerTransactions { get; set; }
#endif
        /// <summary>The deliveryInstructions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryInstructions { get; set; }
#nullable restore
#else
        public string DeliveryInstructions { get; set; }
#endif
        /// <summary>The deliveryMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod? DeliveryMethod { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod DeliveryMethod { get; set; }
#endif
        /// <summary>The deliveryMethodId property</summary>
        public int? DeliveryMethodId { get; set; }
        /// <summary>The deliveryRun property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeliveryRun { get; set; }
#nullable restore
#else
        public string DeliveryRun { get; set; }
#endif
        /// <summary>The internalComments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InternalComments { get; set; }
#nullable restore
#else
        public string InternalComments { get; set; }
#endif
        /// <summary>The invoiceDate property</summary>
        public DateTimeOffset? InvoiceDate { get; set; }
        /// <summary>The invoiceId property</summary>
        public int? InvoiceId { get; set; }
        /// <summary>The invoiceLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<InvoiceLine>? InvoiceLines { get; set; }
#nullable restore
#else
        public List<InvoiceLine> InvoiceLines { get; set; }
#endif
        /// <summary>The isCreditNote property</summary>
        public bool? IsCreditNote { get; set; }
        /// <summary>The lastEditedBy property</summary>
        public int? LastEditedBy { get; set; }
        /// <summary>The lastEditedByNavigation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? LastEditedByNavigation { get; set; }
#nullable restore
#else
        public Person LastEditedByNavigation { get; set; }
#endif
        /// <summary>The lastEditedWhen property</summary>
        public DateTimeOffset? LastEditedWhen { get; set; }
        /// <summary>The order property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Order? Order { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Order Order { get; set; }
#endif
        /// <summary>The orderId property</summary>
        public int? OrderId { get; set; }
        /// <summary>The packedByPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? PackedByPerson { get; set; }
#nullable restore
#else
        public Person PackedByPerson { get; set; }
#endif
        /// <summary>The packedByPersonId property</summary>
        public int? PackedByPersonId { get; set; }
        /// <summary>The returnedDeliveryData property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnedDeliveryData { get; set; }
#nullable restore
#else
        public string ReturnedDeliveryData { get; set; }
#endif
        /// <summary>The runPosition property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RunPosition { get; set; }
#nullable restore
#else
        public string RunPosition { get; set; }
#endif
        /// <summary>The salespersonPerson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Person? SalespersonPerson { get; set; }
#nullable restore
#else
        public Person SalespersonPerson { get; set; }
#endif
        /// <summary>The salespersonPersonId property</summary>
        public int? SalespersonPersonId { get; set; }
        /// <summary>The stockItemTransactions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<StockItemTransaction>? StockItemTransactions { get; set; }
#nullable restore
#else
        public List<StockItemTransaction> StockItemTransactions { get; set; }
#endif
        /// <summary>The totalChillerItems property</summary>
        public int? TotalChillerItems { get; set; }
        /// <summary>The totalDryItems property</summary>
        public int? TotalDryItems { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="Invoice"/> and sets the default values.
        /// </summary>
        public Invoice()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Invoice"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Invoice CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Invoice();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"accountsPerson", n => { AccountsPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"accountsPersonId", n => { AccountsPersonId = n.GetIntValue(); } },
                {"billToCustomer", n => { BillToCustomer = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer.CreateFromDiscriminatorValue); } },
                {"billToCustomerId", n => { BillToCustomerId = n.GetIntValue(); } },
                {"comments", n => { Comments = n.GetStringValue(); } },
                {"confirmedDeliveryTime", n => { ConfirmedDeliveryTime = n.GetDateTimeOffsetValue(); } },
                {"confirmedReceivedBy", n => { ConfirmedReceivedBy = n.GetStringValue(); } },
                {"contactPerson", n => { ContactPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"contactPersonId", n => { ContactPersonId = n.GetIntValue(); } },
                {"creditNoteReason", n => { CreditNoteReason = n.GetStringValue(); } },
                {"customer", n => { Customer = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer.CreateFromDiscriminatorValue); } },
                {"customerId", n => { CustomerId = n.GetIntValue(); } },
                {"customerPurchaseOrderNumber", n => { CustomerPurchaseOrderNumber = n.GetStringValue(); } },
                {"customerTransactions", n => { CustomerTransactions = n.GetCollectionOfObjectValues<CustomerTransaction>(CustomerTransaction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"deliveryInstructions", n => { DeliveryInstructions = n.GetStringValue(); } },
                {"deliveryMethod", n => { DeliveryMethod = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod.CreateFromDiscriminatorValue); } },
                {"deliveryMethodId", n => { DeliveryMethodId = n.GetIntValue(); } },
                {"deliveryRun", n => { DeliveryRun = n.GetStringValue(); } },
                {"internalComments", n => { InternalComments = n.GetStringValue(); } },
                {"invoiceDate", n => { InvoiceDate = n.GetDateTimeOffsetValue(); } },
                {"invoiceId", n => { InvoiceId = n.GetIntValue(); } },
                {"invoiceLines", n => { InvoiceLines = n.GetCollectionOfObjectValues<InvoiceLine>(InvoiceLine.CreateFromDiscriminatorValue)?.ToList(); } },
                {"isCreditNote", n => { IsCreditNote = n.GetBoolValue(); } },
                {"lastEditedBy", n => { LastEditedBy = n.GetIntValue(); } },
                {"lastEditedByNavigation", n => { LastEditedByNavigation = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"lastEditedWhen", n => { LastEditedWhen = n.GetDateTimeOffsetValue(); } },
                {"order", n => { Order = n.GetObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Order>(WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Order.CreateFromDiscriminatorValue); } },
                {"orderId", n => { OrderId = n.GetIntValue(); } },
                {"packedByPerson", n => { PackedByPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"packedByPersonId", n => { PackedByPersonId = n.GetIntValue(); } },
                {"returnedDeliveryData", n => { ReturnedDeliveryData = n.GetStringValue(); } },
                {"runPosition", n => { RunPosition = n.GetStringValue(); } },
                {"salespersonPerson", n => { SalespersonPerson = n.GetObjectValue<Person>(Person.CreateFromDiscriminatorValue); } },
                {"salespersonPersonId", n => { SalespersonPersonId = n.GetIntValue(); } },
                {"stockItemTransactions", n => { StockItemTransactions = n.GetCollectionOfObjectValues<StockItemTransaction>(StockItemTransaction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"totalChillerItems", n => { TotalChillerItems = n.GetIntValue(); } },
                {"totalDryItems", n => { TotalDryItems = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Person>("accountsPerson", AccountsPerson);
            writer.WriteIntValue("accountsPersonId", AccountsPersonId);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>("billToCustomer", BillToCustomer);
            writer.WriteIntValue("billToCustomerId", BillToCustomerId);
            writer.WriteStringValue("comments", Comments);
            writer.WriteDateTimeOffsetValue("confirmedDeliveryTime", ConfirmedDeliveryTime);
            writer.WriteStringValue("confirmedReceivedBy", ConfirmedReceivedBy);
            writer.WriteObjectValue<Person>("contactPerson", ContactPerson);
            writer.WriteIntValue("contactPersonId", ContactPersonId);
            writer.WriteStringValue("creditNoteReason", CreditNoteReason);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Customer>("customer", Customer);
            writer.WriteIntValue("customerId", CustomerId);
            writer.WriteStringValue("customerPurchaseOrderNumber", CustomerPurchaseOrderNumber);
            writer.WriteCollectionOfObjectValues<CustomerTransaction>("customerTransactions", CustomerTransactions);
            writer.WriteStringValue("deliveryInstructions", DeliveryInstructions);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.DeliveryMethod>("deliveryMethod", DeliveryMethod);
            writer.WriteIntValue("deliveryMethodId", DeliveryMethodId);
            writer.WriteStringValue("deliveryRun", DeliveryRun);
            writer.WriteStringValue("internalComments", InternalComments);
            writer.WriteDateTimeOffsetValue("invoiceDate", InvoiceDate);
            writer.WriteIntValue("invoiceId", InvoiceId);
            writer.WriteCollectionOfObjectValues<InvoiceLine>("invoiceLines", InvoiceLines);
            writer.WriteBoolValue("isCreditNote", IsCreditNote);
            writer.WriteIntValue("lastEditedBy", LastEditedBy);
            writer.WriteObjectValue<Person>("lastEditedByNavigation", LastEditedByNavigation);
            writer.WriteDateTimeOffsetValue("lastEditedWhen", LastEditedWhen);
            writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.WideWorldImportersService.Order>("order", Order);
            writer.WriteIntValue("orderId", OrderId);
            writer.WriteObjectValue<Person>("packedByPerson", PackedByPerson);
            writer.WriteIntValue("packedByPersonId", PackedByPersonId);
            writer.WriteStringValue("returnedDeliveryData", ReturnedDeliveryData);
            writer.WriteStringValue("runPosition", RunPosition);
            writer.WriteObjectValue<Person>("salespersonPerson", SalespersonPerson);
            writer.WriteIntValue("salespersonPersonId", SalespersonPersonId);
            writer.WriteCollectionOfObjectValues<StockItemTransaction>("stockItemTransactions", StockItemTransactions);
            writer.WriteIntValue("totalChillerItems", TotalChillerItems);
            writer.WriteIntValue("totalDryItems", TotalDryItems);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
