// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace WideWorldImporters.Shared.ApiSdk.Models.Edm {
    /// <summary>
    /// Composed type wrapper for classes <see cref="GeometryCollection"/>, <see cref="GeometryLineString"/>, <see cref="GeometryMultiLineString"/>, <see cref="GeometryMultiPoint"/>, <see cref="GeometryMultiPolygon"/>, <see cref="GeometryPoint"/>, <see cref="GeometryPolygon"/>
    /// </summary>
    public class Geometry : IComposedTypeWrapper, IParsable 
    {
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection? GeometryCollection { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection GeometryCollection { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection? GeometryGeometryCollection { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection GeometryGeometryCollection { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection? GeometryGeometryCollection0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection GeometryGeometryCollection0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString? GeometryGeometryLineString { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString GeometryGeometryLineString { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString? GeometryGeometryLineString0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString GeometryGeometryLineString0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString? GeometryGeometryMultiLineString { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString GeometryGeometryMultiLineString { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString? GeometryGeometryMultiLineString0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString GeometryGeometryMultiLineString0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint? GeometryGeometryMultiPoint { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint GeometryGeometryMultiPoint { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint? GeometryGeometryMultiPoint0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint GeometryGeometryMultiPoint0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon? GeometryGeometryMultiPolygon { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon GeometryGeometryMultiPolygon { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon? GeometryGeometryMultiPolygon0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon GeometryGeometryMultiPolygon0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint? GeometryGeometryPoint { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint GeometryGeometryPoint { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint? GeometryGeometryPoint0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint GeometryGeometryPoint0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon? GeometryGeometryPolygon { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon GeometryGeometryPolygon { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon? GeometryGeometryPolygon0 { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon GeometryGeometryPolygon0 { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString? GeometryLineString { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString GeometryLineString { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString? GeometryMultiLineString { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString GeometryMultiLineString { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint? GeometryMultiPoint { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint GeometryMultiPoint { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon? GeometryMultiPolygon { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon GeometryMultiPolygon { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint? GeometryPoint { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint GeometryPoint { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon? GeometryPolygon { get; set; }
#nullable restore
#else
        public WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon GeometryPolygon { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Geometry"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Geometry CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("")?.GetStringValue();
            var result = new Geometry();
            if("Edm.GeometryCollection".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryCollection = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection();
            }
            else if("Edm.GeometryCollection".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryCollection = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection();
            }
            else if("Edm.GeometryCollection".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryCollection0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection();
            }
            else if("Edm.GeometryLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryLineString = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString();
            }
            else if("Edm.GeometryLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryLineString0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString();
            }
            else if("Edm.GeometryMultiLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiLineString = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString();
            }
            else if("Edm.GeometryMultiLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiLineString0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString();
            }
            else if("Edm.GeometryMultiPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiPoint = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint();
            }
            else if("Edm.GeometryMultiPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiPoint0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint();
            }
            else if("Edm.GeometryMultiPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiPolygon = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon();
            }
            else if("Edm.GeometryMultiPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryMultiPolygon0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon();
            }
            else if("Edm.GeometryPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryPoint = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint();
            }
            else if("Edm.GeometryPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryPoint0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint();
            }
            else if("Edm.GeometryPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryPolygon = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon();
            }
            else if("Edm.GeometryPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryGeometryPolygon0 = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon();
            }
            else if("Edm.GeometryLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryLineString = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString();
            }
            else if("Edm.GeometryMultiLineString".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryMultiLineString = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString();
            }
            else if("Edm.GeometryMultiPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryMultiPoint = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint();
            }
            else if("Edm.GeometryMultiPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryMultiPolygon = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon();
            }
            else if("Edm.GeometryPoint".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryPoint = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint();
            }
            else if("Edm.GeometryPolygon".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GeometryPolygon = new WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(GeometryCollection != null)
            {
                return GeometryCollection.GetFieldDeserializers();
            }
            else if(GeometryGeometryCollection != null)
            {
                return GeometryGeometryCollection.GetFieldDeserializers();
            }
            else if(GeometryGeometryCollection0 != null)
            {
                return GeometryGeometryCollection0.GetFieldDeserializers();
            }
            else if(GeometryGeometryLineString != null)
            {
                return GeometryGeometryLineString.GetFieldDeserializers();
            }
            else if(GeometryGeometryLineString0 != null)
            {
                return GeometryGeometryLineString0.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiLineString != null)
            {
                return GeometryGeometryMultiLineString.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiLineString0 != null)
            {
                return GeometryGeometryMultiLineString0.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiPoint != null)
            {
                return GeometryGeometryMultiPoint.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiPoint0 != null)
            {
                return GeometryGeometryMultiPoint0.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiPolygon != null)
            {
                return GeometryGeometryMultiPolygon.GetFieldDeserializers();
            }
            else if(GeometryGeometryMultiPolygon0 != null)
            {
                return GeometryGeometryMultiPolygon0.GetFieldDeserializers();
            }
            else if(GeometryGeometryPoint != null)
            {
                return GeometryGeometryPoint.GetFieldDeserializers();
            }
            else if(GeometryGeometryPoint0 != null)
            {
                return GeometryGeometryPoint0.GetFieldDeserializers();
            }
            else if(GeometryGeometryPolygon != null)
            {
                return GeometryGeometryPolygon.GetFieldDeserializers();
            }
            else if(GeometryGeometryPolygon0 != null)
            {
                return GeometryGeometryPolygon0.GetFieldDeserializers();
            }
            else if(GeometryLineString != null)
            {
                return GeometryLineString.GetFieldDeserializers();
            }
            else if(GeometryMultiLineString != null)
            {
                return GeometryMultiLineString.GetFieldDeserializers();
            }
            else if(GeometryMultiPoint != null)
            {
                return GeometryMultiPoint.GetFieldDeserializers();
            }
            else if(GeometryMultiPolygon != null)
            {
                return GeometryMultiPolygon.GetFieldDeserializers();
            }
            else if(GeometryPoint != null)
            {
                return GeometryPoint.GetFieldDeserializers();
            }
            else if(GeometryPolygon != null)
            {
                return GeometryPolygon.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(GeometryCollection != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection>(null, GeometryCollection);
            }
            else if(GeometryGeometryCollection != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection>(null, GeometryGeometryCollection);
            }
            else if(GeometryGeometryCollection0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryCollection>(null, GeometryGeometryCollection0);
            }
            else if(GeometryGeometryLineString != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString>(null, GeometryGeometryLineString);
            }
            else if(GeometryGeometryLineString0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString>(null, GeometryGeometryLineString0);
            }
            else if(GeometryGeometryMultiLineString != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString>(null, GeometryGeometryMultiLineString);
            }
            else if(GeometryGeometryMultiLineString0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString>(null, GeometryGeometryMultiLineString0);
            }
            else if(GeometryGeometryMultiPoint != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint>(null, GeometryGeometryMultiPoint);
            }
            else if(GeometryGeometryMultiPoint0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint>(null, GeometryGeometryMultiPoint0);
            }
            else if(GeometryGeometryMultiPolygon != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon>(null, GeometryGeometryMultiPolygon);
            }
            else if(GeometryGeometryMultiPolygon0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon>(null, GeometryGeometryMultiPolygon0);
            }
            else if(GeometryGeometryPoint != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint>(null, GeometryGeometryPoint);
            }
            else if(GeometryGeometryPoint0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint>(null, GeometryGeometryPoint0);
            }
            else if(GeometryGeometryPolygon != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon>(null, GeometryGeometryPolygon);
            }
            else if(GeometryGeometryPolygon0 != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon>(null, GeometryGeometryPolygon0);
            }
            else if(GeometryLineString != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryLineString>(null, GeometryLineString);
            }
            else if(GeometryMultiLineString != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiLineString>(null, GeometryMultiLineString);
            }
            else if(GeometryMultiPoint != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPoint>(null, GeometryMultiPoint);
            }
            else if(GeometryMultiPolygon != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryMultiPolygon>(null, GeometryMultiPolygon);
            }
            else if(GeometryPoint != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPoint>(null, GeometryPoint);
            }
            else if(GeometryPolygon != null)
            {
                writer.WriteObjectValue<WideWorldImporters.Shared.ApiSdk.Models.Edm.GeometryPolygon>(null, GeometryPolygon);
            }
        }
    }
}
